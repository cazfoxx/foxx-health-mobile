plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.foxxhealth.foxxapp"
    compileSdk = 36

    defaultConfig {
        applicationId = "com.foxxhealth.foxxapp"
        minSdk = 30
        targetSdk = 36
        versionCode = 2
        versionName = "1.0.0" // or flutter.versionName
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    // Define release signing config only if all required properties are present
    if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE') &&
        project.hasProperty('MYAPP_UPLOAD_STORE_PASSWORD') &&
        project.hasProperty('MYAPP_UPLOAD_KEY_ALIAS') &&
        project.hasProperty('MYAPP_UPLOAD_KEY_PASSWORD')) {
        signingConfigs {
            release {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            // Use signingConfigs.release only if defined
            if (signingConfigs.findByName('release') != null) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Kotlin stdlib-jdk7 is provided by the Kotlin Gradle plugin; no need to add explicitly.
    // ... add other dependencies here
}
